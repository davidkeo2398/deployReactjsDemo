{"version":3,"sources":["logo.svg","components/NavbarComponent/NavbarComponent.js","components/Login/LoginComponent.js","redux/Actions/LoginAction.js","data/InformationData.js","components/HomeComponent.js","App.js","reportWebVitals.js","redux/Reducers/LoginReducer.js","redux/Reducers/index.js","Store.js","index.js"],"names":["screenH","window","screen","height","screenW","width","phone","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","nav","backgroundColor","color","boxShadow","Navbar","withRouter","location","history","classes","useMediaQuery","className","AppBar","position","Toolbar","IconButton","onClick","console","log","edge","aria-label","Typography","variant","Button","useStyles","margin","txt","fontSize","btn","Login","useState","name","setName","pass","setPass","dispatch","useDispatch","handleChange","e","target","id","value","onSubmit","preventDefault","action","type","payload","userName","passWord","noValidate","autoComplete","TextField","onChange","label","user","Home","userNameInp","useSelector","state","LoginReducer","passWordInp","UserInfo","NavbarComponent","LoginComponent","App","exact","path","component","HomeComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","inititalState","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.521f8d47.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { withRouter } from \"react-router\";\r\nimport { useMediaQuery } from '@material-ui/core'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nvar screenH = window.screen.height;\r\nvar screenW = window.screen.width;\r\n\r\nconst phone = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  nav: {\r\n    backgroundColor: 'transparent',\r\n    color: 'black',\r\n    boxShadow: 'none',\r\n  },\r\n}),\r\n);\r\n\r\n\r\nconst Navbar = withRouter(({ location, history }) => {\r\n  const classes = phone()\r\n  const matches = useMediaQuery('(min-width:600px)');\r\n  const handleClick = () => {\r\n    console.log(screenW + ' : ' + screenH)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.nav} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton onClick={handleClick} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            News\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Navbar","import { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useDispatch} from 'react-redux'\r\nimport { Button } from '@material-ui/core'\r\nimport { login } from '../../redux/Actions/LoginAction';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n    txt: {\r\n        fontSize: '14px',\r\n        backgroundColor: 'rgba(255, 238, 251, 0.6)',\r\n    },\r\n    btn: {\r\n        backgroundColor: 'rgba(115, 180, 255, 1.0)',\r\n        color: 'black',\r\n        fontSize: '14px',\r\n    },\r\n}));\r\n\r\nconst Login = () => {\r\n    const classes = useStyles()\r\n    const [name, setName] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.id === 'userInp') {\r\n            setName(e.target.value)\r\n        }\r\n        if (e.target.id === 'passInp') {\r\n            setPass(e.target.value)\r\n        }\r\n        // console.log(userInfo[0].userName)\r\n    }\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        // console.log(name + ' '+ pass)\r\n        const newUser = {\r\n            userName: name,\r\n            passWord: pass,\r\n        }\r\n        const action = login(newUser)\r\n        dispatch(action)\r\n        // console.log(userNameInp + ' ' + passWordInp)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleLogin} className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField value={name} onChange={handleChange} className={classes.txt} id=\"userInp\" label=\"User name\" variant=\"filled\" />\r\n            <TextField type='password' value={pass} onChange={handleChange} className={classes.txt} id=\"passInp\" label=\"Password\" variant=\"filled\" />\r\n            <Button type='submit' className={classes.btn} variant=\"contained\">\r\n                Login\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login","export const login = (userInfo) => {\r\n    return{\r\n        type: 'LOGIN',\r\n        payload: userInfo,\r\n    }\r\n}\r\n\r\nexport const loggout = (LoginReducer) => {\r\n    return{\r\n        type: 'LOGGOUT',\r\n        payload: LoginReducer,\r\n    }\r\n}","const user = [\r\n    {\r\n        userName: 'Strawberry Princess',\r\n        passWord: 'Kybeodangyeucocairungsieupham'\r\n    },\r\n    {\r\n        userName: 'Admin',\r\n        passWord: '1223334444!@#$'\r\n    },\r\n]\r\n\r\nexport default user","import { withRouter } from 'react-router-dom'\r\nimport NavbarComponent from './NavbarComponent/NavbarComponent'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport {useSelector } from 'react-redux'\r\n\r\nimport LoginComponent from './Login/LoginComponent'\r\nimport UserInfo from '../data/InformationData'\r\nconst Home = withRouter(({ location, history }) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n\r\n        }\r\n    }))\r\n\r\n    const userNameInp = useSelector(state => state.LoginReducer.userNameInp)\r\n    const passWordInp = useSelector(state => state.LoginReducer.passWordInp)\r\n    const { userName, passWord } = UserInfo[0]\r\n    return (\r\n        <div>\r\n            \r\n            {userName === userNameInp && passWord === passWordInp ?\r\n                <NavbarComponent></NavbarComponent> :\r\n                <LoginComponent></LoginComponent>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Home","import logo from './logo.svg';\nimport './App.css';\n\nimport HomeComponent from './components/HomeComponent'\n\nimport { Switch, Route} from 'react-router-dom'\n\nfunction App() {\n  return (\n      <Switch>\n        <Route exact path='/' component={HomeComponent} />\n      </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const inititalState = {\r\n    userNameInp : '',\r\n    passWordInp : '',\r\n}\r\n\r\nconst LoginReducer = (state = inititalState, action) => {\r\n    switch(action.type){\r\n        case 'LOGGOUT':\r\n            return state\r\n        case 'LOGIN':\r\n            return {\r\n                userNameInp: action.payload.userName,\r\n                passWordInp: action.payload.passWord,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default LoginReducer","import { combineReducers } from \"redux\";\r\nimport LoginReducer from './LoginReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    LoginReducer,\r\n})\r\n\r\nexport default rootReducer","import { createStore } from \"redux\";\r\nimport rootReducer from \"./redux/Reducers\";\r\n\r\nconst store  = createStore(rootReducer)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { HashRouter as Router } from 'react-router-dom'\n\nimport { Provider } from 'react-redux';\nimport store from './Store';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}